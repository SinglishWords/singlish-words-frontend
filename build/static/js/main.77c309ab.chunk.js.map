{"version":3,"sources":["utils/formFields.js","utils/Api/axiosConfig.js","utils/Data/agesList.js","utils/formData.js","utils/Data/genderList.js","utils/Data/educationLevelList.js","utils/Data/countriesList.js","utils/Data/ethicGroupList.js","utils/Data/yesNoList.js","utils/Data/languagesSpokenList.js","utils/Logic/copyUtil.js","components/Helpers/Footer/Footer.js","components/Helpers/FormButton/FormButton.js","components/Helpers/Header/Header.js","components/Pages/EmailStudentVersion/EmailStudentVersion.js","components/Pages/Instruction/Instruction.js","assets/images/NUS_Logo.png","utils/Logic/timeUtil.js","components/Pages/IntroductionStudentVersion/IntroductionStudentVersion.js","components/Helpers/PopoverButton/PopoverButton.js","components/Pages/Quiz/Quiz.js","utils/Logic/userInformationLogic.js","components/Helpers/Dropdown/Dropdown.js","components/Pages/UserDetails/UserDetails.js","components/Form.js","App.js","index.js"],"names":["recaptchaFields","isVerified","showRecaptcha","Math","random","recaptchaAlreadyShown","formFields","step","age","gender","education","countryOfBirth","countryOfResidence","ethnicity","isNative","languagesSpoken","startTime","endTime","uuid","data","question","id","progress","word","response","timeOnPage","instance","axios","create","baseURL","start","agesList","Array","fill","map","d","i","unshift","push","formData","introductionPage","title","subtitle","introduction","introductionLuckyDraw","introduction2","introduction3","introduction4","luckyDrawButtonDescription","luckyDrawInformation","continueButtonDescription","introductionPageStudent","introductionEmail","informationAboutYouPage","instruction1","instruction2","ageInstruction","genderInstruction","educationInstruction","birthCountryInstruction","ethnicityInstruction","residenceCountryInstruction","nativeSpeakerInstruction","otherLanguagesInstruction","buttonDescription","ages","genderTypes","educationLevels","countries","ethnicities","yesAndNo","instructionsPage","firstParagraphHeader","firstParagraphDescription","description1","description2","description3","description4","description5","description6","secondParagraphHeader","secondParagraphDescription","quizPage","firstAssociationInstruction","secondAssociationInstruction","thirdAssociationInstruction","needHelpButtonDescription","instructionReminder","emailPage","email","enterCode","thirdParagraphHeader","thirdParagraphDescription","fourthParagraphHeader","fourthParagraphDescription","email2","fifthParagraphHeader","fifthParagraphDescription","emailPageStudent","footer","top","bottom","urlstring","url","copyToClipboard","textToCopy","navigator","clipboard","window","isSecureContext","writeText","textArea","document","createElement","value","style","position","left","body","appendChild","focus","select","Promise","res","rej","execCommand","remove","Footer","Grid","container","className","item","xs","Typography","variant","Link","onClick","open","Component","FormButton","Box","display","justifyContent","Button","type","this","props","disabled","buttonRef","size","Header","Email","state","isCopied","formStateCopy","JSON","parse","stringify","formState","answers","console","log","axiosConfig","post","then","status","alert","catch","error","removeStateFromLocalStorage","justify","setState","location","host","Instruction","handleRecaptchaChange","scrollTo","numberOfWordsToGet","values","length","previousStep","get","questionsUrl","handleWordPopulation","nextPage","Divider","sitekey","onChange","startTimer","performance","now","currentDateTime","date","Date","getTime","getTimezoneOffset","toISOString","IntroductionStudentVersion","handleFieldChange","src","image","alt","component","e","uuidv4","PopoverButton","popOverButtonText","React","useState","anchorEl","setAnchorEl","Boolean","undefined","color","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","disableAutoFocus","align","Quiz","firstAssociationRef","createRef","secondAssociationRef","thirdAssociationRef","continueButton","pageStartTime","pageEndTime","resetAssociations","current","handleResponseChange","handleTimeOnPage","wordIndex","TextField","autoFocus","autoComplete","label","name","inputRef","onKeyPress","key","defaultValue","click","gutterBottom","LinearProgress","checkCountryOfBirthSingapore","Dropdown","FormControl","required","InputLabel","inputLabel","Select","native","listData","UserDetails","handleChange","handleAgeChange","handleCountryOfBirthChange","handleLanguageChange","handleLanguageReset","compusloryFieldsFilled","checkCompulsoryFieldsForNonSingaporean","isEnabled","checkEthnicityFieldFilled","List","dense","language","ListItem","ListItemText","primary","Form","localStorage","removeItem","removeEventListener","saveStateToLocalStorage","bind","stateReset","cleanState","Object","assign","stateCopy","nextStep","preventDefault","target","temp","options","languages","l","selected","includes","j","wordArray","element","index","timeDifference","timeInSeconds","round","field","getItem","setItem","addEventListener","App","ReactDOM","render","getElementById"],"mappings":"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,kBAAkB,4BAClBP,cAAc,kFACdC,cAAc,wBACdC,cAAc,iTACdG,0BAA0B,0BAI5BG,wBAAyB,CACvBZ,MAAM,wBACNa,aAAa,4DACbC,aAAa,6CACbC,eAAe,yBACfC,kBAAkB,4BAClBC,qBAAqB,gEACrBC,wBAAwB,sCACxBC,qBAAqB,kCACrBC,4BAA4B,kDAC5BC,yBAAyB,oCACzBC,0BAA0B,qCAC1BC,kBAAkB,WAClBC,KDvDWlC,ECwDXmC,YCxEe,CAAC,OAAQ,SAAU,cDyElCC,gBEzEuB,CACzB,OACA,OACA,mBACA,eACA,oBACA,kBACA,2CFmEEC,UG1EkB,CACpB,cACA,UACA,UACA,UACA,SACA,WACA,oBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,uBACA,WACA,SACA,yBACA,SACA,WACA,eACA,UACA,WACA,WACA,aACA,iBACA,OACA,QACA,QACA,WACA,QACA,eACA,aACA,gBACA,UACA,cACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,WACA,mBACA,gBACA,OACA,UACA,SACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,SACA,kBACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,0BACA,QACA,aACA,YACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,eACA,cACA,QACA,YACA,mBACA,WACA,aACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,eACA,OACA,QACA,oBACA,UACA,SACA,eACA,iBACA,SACA,UACA,uBACA,iBACA,UACA,aACA,YACA,UACA,sBACA,QACA,SACA,YHlIEC,YI3EmB,CAAC,UAAW,QAAS,SAAU,UJ4ElDC,SK5Ec,CAAC,MAAO,ML6EtBvD,gBM7EwB,CAC1B,YACA,OACA,YACA,OACA,WACA,UACA,SACA,YACA,WACA,WACA,SACA,UACA,SACA,cACA,UACA,UACA,SACA,aACA,UACA,mBACA,UACA,UACA,SACA,YACA,UACA,qBACA,gBACA,WACA,UACA,0BACA,UACA,iCACA,UACA,UACA,WACA,OACA,WACA,QACA,SACA,6BACA,iBACA,WACA,YACA,WACA,MACA,UACA,SACA,UACA,SACA,QACA,0BACA,WACA,QACA,WACA,SACA,iBACA,iBACA,2BACA,UACA,WACA,0BACA,QACA,SACA,SACA,QACA,YACA,YACA,YACA,MACA,OACA,aACA,cACA,cACA,YACA,UACA,QACA,UACA,WACA,WACA,UACA,SACA,WACA,SACA,cACA,OACA,QACA,SACA,qBACA,UACA,SACA,MACA,QACA,UACA,+BACA,mCACA,UACA,aACA,eACA,aACA,WACA,QACA,YACA,UACA,mBACA,OACA,QACA,UACA,cACA,gCACA,YACA,QACA,iBACA,mBACA,SACA,SACA,gBACA,YACA,sBACA,oBACA,oBACA,sBACA,SACA,QACA,QACA,oBACA,OACA,mBACA,iBACA,UACA,SACA,aACA,UACA,UACA,QACA,UACA,SACA,QACA,WACA,YACA,UACA,QACA,SACA,qBACA,SACA,YACA,SACA,kBACA,gBACA,qBACA,YACA,UACA,QACA,UACA,UACA,WACA,QACA,QACA,QACA,SACA,OACA,UACA,WACA,wBACA,SACA,SACA,UACA,UACA,MACA,iBACA,YACA,OACA,QACA,QACA,aACA,UACA,UACA,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","file":"static/js/main.77c309ab.chunk.js","sourcesContent":["/* Backend to exclude survey participant from lucky draw if timeOnPage is very short\nformFields is used on Form.js so as to set a state for the Form to collect data */\n\nconst formFields = {\n  step: 1,\n  age: \"\",\n  gender: \"\",\n  education: \"\",\n  countryOfBirth: \"Singapore\",\n  countryOfResidence: \"Singapore\",\n  ethnicity: \"\",\n  isNative: \"\",\n  languagesSpoken: [],\n  startTime: \"\",\n  endTime: \"\",\n  uuid: \"\",\n  data: [\n    {\n      question: { id: 1, progress: 1, word: \"word1\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 2, progress: 2, word: \"word2\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 3, progress: 3, word: \"word3\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 4, progress: 4, word: \"word4\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 5, progress: 5, word: \"word5\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 6, progress: 6, word: \"word6\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 7, progress: 7, word: \"word7\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 8, progress: 8, word: \"word8\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 9, progress: 9, word: \"word9\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 10, progress: 10, word: \"word10\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 11, progress: 11, word: \"word11\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 12, progress: 12, word: \"word12\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 13, progress: 13, word: \"word13\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 14, progress: 14, word: \"word14\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 15, progress: 15, word: \"word15\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 16, progress: 16, word: \"word16\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 17, progress: 17, word: \"word17\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 18, progress: 18, word: \"word18\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 19, progress: 19, word: \"word19\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n    {\n      question: { id: 20, progress: 20, word: \"word20\" },\n      response: [\"\", \"\", \"\"],\n      timeOnPage: \"\",\n    },\n  ],\n};\n\nexport const recaptchaFields = {\n  isVerified: false,\n  // 10% chance of recaptcha rendering to catch bots\n  showRecaptcha: Math.random() < 0.1,\n  // Render recaptcha once on Quiz page, at random depending on showRecaptcha boolean\n  recaptchaAlreadyShown: false,\n};\n\nexport default formFields;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://singlishwords.nus.edu.sg/'\n});\n\nexport const questionsUrl = \"api/v1/questions\";\nexport const answersUrl = \"api/v1/answers\";\n\nexport default instance;","/* Generates an age range from start age to end age */\nfunction ageRange(start, end) {\n    return new Array(end - start + 1)\n      .fill()\n      .map((d, i) => i + start)\n  }\n  \n  /* Age range : < 18, 18-80, >80 \n  <18 is represented by 0\n  >80 is represented by 1 */\n  const agesList = ageRange(18, 80);\n  const lessThanEighteen = 17;\n  const moreThanEighty = 81;\n  agesList.unshift(lessThanEighteen);\n  agesList.push(moreThanEighty);\n\nexport default agesList;","import agesList from \"./Data/agesList\";\nimport countriesList from \"./Data/countriesList\";\nimport educationLevelList from \"./Data/educationLevelList\";\nimport ethicGroupList from \"./Data/ethicGroupList\";\nimport genderList from \"./Data/genderList\";\nimport languagesSpokenList from \"./Data/languagesSpokenList\";\nimport yesNoList from \"./Data/yesNoList\";\n\nconst formData = {\n  /* Introduction Page */\n  introductionPage: {\n    title: `A Small World of Singlish Words:`,\n    subtitle: `A Word Association Study`,\n    introduction: `Welcome to this study on word associations in Singapore English. Singaporeans have a unique vocabulary, consisting of Singlish words and phrases that originate from various local languages, on top of the Standard English vocabulary. As researchers studying language and memory we are interested in the nature and organization of this unique mental dictionary of Singapore English. \n    \n    You can help us capture this knowledge by playing a simple game of word associations. This game takes no more than 15 minutes of your time. All you have to do is to respond with the first three words that come to your mind for a list of Singapore English words.\n    \n    If you are between 18 to 80 years old, and consider yourself to be a native speaker of Singapore English, you are eligible to take part in our study.\n    \n    Upon completion of the study, you can enter a `,\n    introductionLuckyDraw: `monthly lucky draw (refer to \"Lucky Draw T&C\")`,\n    introduction2: ` to stand a chance of winning $5 Grab vouchers by entering your email address in the last page. The more times you complete the study, the more chances you get. `,\n    introduction3: `Don’t say bojio!`,\n    introduction4: `If you proceed, you consent to your demographic and linguistic data to be collected for research purposes. This data is completely anonymous, and never linked to your personal or contact information. Your anonymized data could be shared with other researchers for the purpose of scientific exploration.`,\n    luckyDrawButtonDescription: `Lucky Draw T&C`,\n    luckyDrawInformation: `The lucky draw will be active from 1st January 2022 to 30th June 2022. In order to participate,\n    please email the unique code shown at the end of the survey to singlishwords@nus.edu.sg. \n    Your decision to participate is voluntary. The chance that each participant has to win a \n    voucher is proportional to the number of times they had completed the study and entered \n    their email address on the final page. Participants who have been identified as \n    exhibiting bot-like behavior are not permitted to participate in the lucky draw.\n    Winners of the lucky draw will be randomly selected on the final day of the month. All\n    participants will be notified of the outcome regardless of whether they had won or not. \n    100 $5 Grab Vouchers will be awarded each month.\n    \n    After winners have been selected, the pool from which the lucky draw winners are selected\n    is reset for the next month.`,\n    continueButtonDescription: `I want to participate!`,\n  },\n\n  /* Introduction Page (Student) */\n  introductionPageStudent: {\n    title: `A Small World of Singlish Words:`,\n    subtitle: `A Word Association Study`,\n    introduction: `Welcome to this study on word associations in Singapore English. Singaporeans have a unique vocabulary, consisting of Singlish words and phrases that originate from various local languages, on top of the Standard English vocabulary. As researchers studying language and memory we are interested in the nature and organization of this unique mental dictionary of Singapore English.\n    You can help us capture this knowledge by playing a simple game of word associations. This game takes no more than 30 minutes of your time. All you have to do is to respond with the first three words that come to your mind for a list of Singapore English words.\n    \n    If you are between 18 to 25 years old, and consider yourself to be a native speaker of Singapore English, you are eligible to take part in our study.\n    \n    Upon completion of the study, if you are a current NUS student, you are eligible to be reimbursed $5 for your time by emailing us, with your `,\n    introductionEmail: `NUS student email address`,\n    introduction2: `, your participation code presented to you only upon completion of this study. `,\n    introduction3: `Don’t say bojio!`,\n    introduction4: `If you proceed, you consent to your demographic and linguistic data to be collected for research purposes. This data is completely anonymous, and never linked to your personal or contact information. Your anonymized data could be shared with other researchers for the purpose of scientific exploration.`,\n    continueButtonDescription: `I want to participate!`,\n  },\n\n  /* Information about you Page */\n  informationAboutYouPage: {\n    title: `Information about you`,\n    instruction1: `Before we get started, please provide the following info.`,\n    instruction2: `Asterisk (*) indicates a compulsory field.`,\n    ageInstruction: `Please select your age`,\n    genderInstruction: `Please select your gender`,\n    educationInstruction: `Please select your highest attained educational qualification`,\n    birthCountryInstruction: `Please select your country of birth`,\n    ethnicityInstruction: `Please select your ethnic group`,\n    residenceCountryInstruction: `Please select your current country of residence`,\n    nativeSpeakerInstruction: `Are you a native English speaker?`,\n    otherLanguagesInstruction: `What other languages do you speak?`,\n    buttonDescription: `continue`,\n    ages: agesList,\n    genderTypes: genderList,\n    educationLevels: educationLevelList,\n    countries: countriesList,\n    ethnicities: ethicGroupList,\n    yesAndNo: yesNoList,\n    languagesSpoken: languagesSpokenList,\n  },\n\n  /* Instructions Page */\n  instructionsPage: {\n    title: `Instructions`,\n    firstParagraphHeader: `How it works...`,\n    firstParagraphDescription: {\n      description1: `On the top of the screen a Singapore English word will appear.`,\n      description2: `Enter the first word that comes to mind`,\n      description3: `when reading this word.`,\n      description4: `Press`,\n      description5: `Enter`,\n      description6: `to add a second and third word or proceed to the next word if you can't think of any.\n      \n      If you don't know the word at all, you can just proceed to the next word.`,\n    },\n    secondParagraphHeader: `Some tips`,\n    secondParagraphDescription: {\n      description1: `Only give associations to the word on top of the screen (not to your previous responses!)`,\n      description2: `Try to avoid full sentences or long phrases as responses.`,\n      description3: `Simply type a word and press `,\n      description4: `Enter`,\n      description5: ` to go to the next one.`,\n      buttonDescription: `continue`,\n    },\n  },\n\n  /* Quiz Page */\n  quizPage: {\n    firstAssociationInstruction: `Enter a word that comes to your mind`,\n    secondAssociationInstruction: `Enter a word that comes to your mind`,\n    thirdAssociationInstruction: `Enter a word that comes to your mind`,\n    progress: `Progress`,\n    needHelpButtonDescription: `Need Help?`,\n    buttonDescription: `continue`,\n    instructionReminder: `How it works...\n    On the top of the screen a Singapore English word will appear. Enter the first word that comes to \n    mind when reading this word. Press Enter to add a second and third word or proceed to the next \n    word if you can't think of any. If you don't know the word at all, you can just proceed to the \n    next word.\n    \n    Some tips\n    Only give associations to the word on top of the screen (not to your previous responses!)\n    Try to avoid full sentences or long phrases as responses.\n    Simply type a word and press Enter to go to the next one.`,\n  },\n\n  /* Email Page */\n  emailPage: {\n    title: `Thank You!`,\n    firstParagraphHeader: `What are we trying to do`,\n    firstParagraphDescription: `The mental lexicon is the part of long-term memory where all of the words that you know and their meanings are stored. The connections between these words and concepts can be represented as a language network (akin to a “social network” of words) to model the large-scale structure of the mental lexicon.\n    In this study, you were asked to respond with words that came to your mind upon the presentation of Singapore English words. These responses are called free associations, and we and other language researchers plan to use these free associations across thousands of words in Singapore English to study the structure of the Singaporean mental lexicon. Thank you for your help with this research!`,\n    secondParagraphHeader: `If you would like to take part in the lucky draw or receive updates about this research`,\n    secondParagraphDescription: {\n      description1: `Please email the following code to `,\n      email: `singlishwords@nus.edu.sg`,\n      description2: ` to take part in the lucky draw.`,\n      enterCode: `Your code is:`,\n      description3: `Note that your contact information is never connected to the data you provided previously. Your responses remain confidential and anonymous.`,\n    },\n    thirdParagraphHeader: `Lucky Draw Terms & Conditions`,\n    thirdParagraphDescription: `The lucky draw will be active from 1st January 2022 to 30th June 2022. Your decision to participate is voluntary. The chance that each participant has to win a voucher is proportional to the number of times they had completed the study and entered their email address on the final page. Participants who have been identified as exhibiting bot-like behavior are not permitted to participate in the lucky draw.\n    Winners of the lucky draw will be randomly selected on the final day of the month. All participants will be notified of the outcome regardless of whether they had won or not. 100 $5 Grab Vouchers will be awarded each month.\n    \n    After winners have been selected, the pool from which the lucky draw winners are selected is reset for the next month.`,\n    fourthParagraphHeader: `Get in touch`,\n    fourthParagraphDescription: {\n      description1: `If you have any concerns or questions regarding this research, please do not hesitate to contact the project team at:`,\n      email: `singlishwords@nus.edu.sg`,\n      description2: `Principal Investigator: Dr. Cynthia Siew\n      Department of Psychology, National University of Singapore.\n      Email: `,\n      email2: `cynthia@nus.edu.sg`,\n    },\n\n    fifthParagraphHeader: `Share the study`,\n    fifthParagraphDescription: `To get enough words and make the mental dictionary useful, we need many helping hands. If you want to help, just share the study with family and friends or come back some other time for new words! - `,\n  },\n\n  /* Email Page (Student) */\n  emailPageStudent: {\n    title: `Thank You!`,\n    firstParagraphHeader: `What are we trying to do`,\n    firstParagraphDescription: `The mental lexicon is the part of long-term memory where all of the words that you know and their meanings are stored. The connections between these words and concepts can be represented as a language network (akin to a “social network” of words) to model the large-scale structure of the mental lexicon.\n    In this study, you were asked to respond with words that came to your mind upon the presentation of Singapore English words. These responses are called free associations, and we and other language researchers plan to use these free associations across thousands of words in Singapore English to study the structure of the Singaporean mental lexicon. Thank you for your help with this research!`,\n    secondParagraphHeader: `If you would like to be reimbursed or receive updates about this research`,\n    secondParagraphDescription: {\n      description1: `Please email the following code to `,\n      email: `singlishwords@nus.edu.sg`,\n      description2: ` to be reimbursed.`,\n      enterCode: `Your code is:`,\n      description3: `Note that your contact information is never connected to the data you provided previously. Your responses remain confidential and anonymous.`,\n    },\n//    thirdParagraphHeader: `Get in touch`,\n//    thirdParagraphDescription: {\n//      description1: `If you have any concerns or questions regarding this research, please do not hesitate to contact the project team at:`,\n//      email: `smallworldofsinglishwords@gmail.com`,\n//      description2: `Principal Investigator: Dr. Cynthia Siew\n//      Department of Psychology, National University of Singapore.\n//      Email: `,\n//      email2: `cynthia@nus.edu.sg`,\n//    },\n  },\n\n  /* Footer */\n  footer: {\n    top: `This project was inspired by the Small World of Words project. We thank the creators for giving us permission to expand this work into the words that make up the Singaporean lexicon.`,\n    bottom: `Small World of Words - `,\n    urlstring: ` https://smallworldofwords.org/`,\n    url: `https://smallworldofwords.org/`,\n  }\n};\n\nexport default formData;\n","const genderList = [\"Male\", \"Female\", \"Non-binary\"];\n\nexport default genderList;\n","const educationLevelList = [\n  \"None\",\n  \"PSLE\",\n  \"GCE N / O-Levels\",\n  \"GCE A-Levels\",\n  \"Bachelor's Degree\",\n  \"Master's Degree\",\n  \"Ph.D.(Doctor of Philosophy) / Doctorate\",\n];\n\nexport default educationLevelList;\n","const countriesList = [\n  \"Afghanistan\",\n  \"Albania\",\n  \"Algeria\",\n  \"Andorra\",\n  \"Angola\",\n  \"Anguilla\",\n  \"Antigua & Barbuda\",\n  \"Argentina\",\n  \"Armenia\",\n  \"Aruba\",\n  \"Australia\",\n  \"Austria\",\n  \"Azerbaijan\",\n  \"Bahamas\",\n  \"Bahrain\",\n  \"Bangladesh\",\n  \"Barbados\",\n  \"Belarus\",\n  \"Belgium\",\n  \"Belize\",\n  \"Benin\",\n  \"Bermuda\",\n  \"Bhutan\",\n  \"Bolivia\",\n  \"Bosnia & Herzegovina\",\n  \"Botswana\",\n  \"Brazil\",\n  \"British Virgin Islands\",\n  \"Brunei\",\n  \"Bulgaria\",\n  \"Burkina Faso\",\n  \"Burundi\",\n  \"Cambodia\",\n  \"Cameroon\",\n  \"Cape Verde\",\n  \"Cayman Islands\",\n  \"Chad\",\n  \"Chile\",\n  \"China\",\n  \"Colombia\",\n  \"Congo\",\n  \"Cook Islands\",\n  \"Costa Rica\",\n  \"Cote D Ivoire\",\n  \"Croatia\",\n  \"Cruise Ship\",\n  \"Cuba\",\n  \"Cyprus\",\n  \"Czech Republic\",\n  \"Denmark\",\n  \"Djibouti\",\n  \"Dominica\",\n  \"Dominican Republic\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Equatorial Guinea\",\n  \"Estonia\",\n  \"Ethiopia\",\n  \"Falkland Islands\",\n  \"Faroe Islands\",\n  \"Fiji\",\n  \"Finland\",\n  \"France\",\n  \"French Polynesia\",\n  \"French West Indies\",\n  \"Gabon\",\n  \"Gambia\",\n  \"Georgia\",\n  \"Germany\",\n  \"Ghana\",\n  \"Gibraltar\",\n  \"Greece\",\n  \"Greenland\",\n  \"Grenada\",\n  \"Guam\",\n  \"Guatemala\",\n  \"Guernsey\",\n  \"Guinea\",\n  \"Guinea Bissau\",\n  \"Guyana\",\n  \"Haiti\",\n  \"Honduras\",\n  \"Hong Kong\",\n  \"Hungary\",\n  \"Iceland\",\n  \"India\",\n  \"Indonesia\",\n  \"Iran\",\n  \"Iraq\",\n  \"Ireland\",\n  \"Isle of Man\",\n  \"Israel\",\n  \"Italy\",\n  \"Jamaica\",\n  \"Japan\",\n  \"Jersey\",\n  \"Jordan\",\n  \"Kazakhstan\",\n  \"Kenya\",\n  \"Kuwait\",\n  \"Kyrgyz Republic\",\n  \"Laos\",\n  \"Latvia\",\n  \"Lebanon\",\n  \"Lesotho\",\n  \"Liberia\",\n  \"Libya\",\n  \"Liechtenstein\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Macau\",\n  \"Macedonia\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Malaysia\",\n  \"Maldives\",\n  \"Mali\",\n  \"Malta\",\n  \"Mauritania\",\n  \"Mauritius\",\n  \"Mexico\",\n  \"Moldova\",\n  \"Monaco\",\n  \"Mongolia\",\n  \"Montenegro\",\n  \"Montserrat\",\n  \"Morocco\",\n  \"Mozambique\",\n  \"Namibia\",\n  \"Nepal\",\n  \"Netherlands\",\n  \"Netherlands Antilles\",\n  \"New Caledonia\",\n  \"New Zealand\",\n  \"Nicaragua\",\n  \"Niger\",\n  \"Nigeria\",\n  \"Norway\",\n  \"Oman\",\n  \"Pakistan\",\n  \"Palestine\",\n  \"Panama\",\n  \"Papua New Guinea\",\n  \"Paraguay\",\n  \"Peru\",\n  \"Philippines\",\n  \"Poland\",\n  \"Portugal\",\n  \"Puerto Rico\",\n  \"Qatar\",\n  \"Reunion\",\n  \"Romania\",\n  \"Russia\",\n  \"Rwanda\",\n  \"Saint Pierre & Miquelon\",\n  \"Samoa\",\n  \"San Marino\",\n  \"Satellite\",\n  \"Saudi Arabia\",\n  \"Senegal\",\n  \"Serbia\",\n  \"Seychelles\",\n  \"Sierra Leone\",\n  \"Singapore\",\n  \"Slovakia\",\n  \"Slovenia\",\n  \"South Africa\",\n  \"South Korea\",\n  \"Spain\",\n  \"Sri Lanka\",\n  \"St Kitts & Nevis\",\n  \"St Lucia\",\n  \"St Vincent\",\n  \"St. Lucia\",\n  \"Sudan\",\n  \"Suriname\",\n  \"Swaziland\",\n  \"Sweden\",\n  \"Switzerland\",\n  \"Syria\",\n  \"Taiwan\",\n  \"Tajikistan\",\n  \"Tanzania\",\n  \"Thailand\",\n  \"Timor L'Este\",\n  \"Togo\",\n  \"Tonga\",\n  \"Trinidad & Tobago\",\n  \"Tunisia\",\n  \"Turkey\",\n  \"Turkmenistan\",\n  \"Turks & Caicos\",\n  \"Uganda\",\n  \"Ukraine\",\n  \"United Arab Emirates\",\n  \"United Kingdom\",\n  \"Uruguay\",\n  \"Uzbekistan\",\n  \"Venezuela\",\n  \"Vietnam\",\n  \"Virgin Islands (US)\",\n  \"Yemen\",\n  \"Zambia\",\n  \"Zimbabwe\",\n];\n\nexport default countriesList;\n","const ethicGroupList = [\"Chinese\", \"Malay\", \"Indian\", \"Others\"];\n\nexport default ethicGroupList;","const yesNoList = [\"Yes\", \"No\"];\n\nexport default yesNoList;\n","const languagesSpokenList = [\n  \"Abkhazian\",\n  \"Afar\",\n  \"Afrikaans\",\n  \"Akan\",\n  \"Albanian\",\n  \"Amharic\",\n  \"Arabic\",\n  \"Aragonese\",\n  \"Armenian\",\n  \"Assamese\",\n  \"Avaric\",\n  \"Avestan\",\n  \"Aymara\",\n  \"Azerbaijani\",\n  \"Bambara\",\n  \"Bashkir\",\n  \"Basque\",\n  \"Belarusian\",\n  \"Bengali\",\n  \"Bihari languages\",\n  \"Bislama\",\n  \"Bosnian\",\n  \"Breton\",\n  \"Bulgarian\",\n  \"Burmese\",\n  \"Catalan, Valencian\",\n  \"Central Khmer\",\n  \"Chamorro\",\n  \"Chechen\",\n  \"Chichewa, Chewa, Nyanja\",\n  \"Chinese\",\n  \"Church Slavonic, Old Bulgarian\",\n  \"Chuvash\",\n  \"Cornish\",\n  \"Corsican\",\n  \"Cree\",\n  \"Croatian\",\n  \"Czech\",\n  \"Danish\",\n  \"Divehi, Dhivehi, Maldivian\",\n  \"Dutch, Flemish\",\n  \"Dzongkha\",\n  \"Esperanto\",\n  \"Estonian\",\n  \"Ewe\",\n  \"Faroese\",\n  \"Fijian\",\n  \"Finnish\",\n  \"French\",\n  \"Fulah\",\n  \"Gaelic, Scottish Gaelic\",\n  \"Galician\",\n  \"Ganda\",\n  \"Georgian\",\n  \"German\",\n  \"Gikuyu, Kikuyu\",\n  \"Greek (Modern)\",\n  \"Greenlandic, Kalaallisut\",\n  \"Guarani\",\n  \"Gujarati\",\n  \"Haitian, Haitian Creole\",\n  \"Hausa\",\n  \"Hebrew\",\n  \"Herero\",\n  \"Hindi\",\n  \"Hiri Motu\",\n  \"Hungarian\",\n  \"Icelandic\",\n  \"Ido\",\n  \"Igbo\",\n  \"Indonesian\",\n  \"Interlingua\",\n  \"Interlingue\",\n  \"Inuktitut\",\n  \"Inupiaq\",\n  \"Irish\",\n  \"Italian\",\n  \"Japanese\",\n  \"Javanese\",\n  \"Kannada\",\n  \"Kanuri\",\n  \"Kashmiri\",\n  \"Kazakh\",\n  \"Kinyarwanda\",\n  \"Komi\",\n  \"Kongo\",\n  \"Korean\",\n  \"Kwanyama, Kuanyama\",\n  \"Kurdish\",\n  \"Kyrgyz\",\n  \"Lao\",\n  \"Latin\",\n  \"Latvian\",\n  \"Letzeburgesch, Luxembourgish\",\n  \"Limburgish, Limburgan, Limburger\",\n  \"Lingala\",\n  \"Lithuanian\",\n  \"Luba-Katanga\",\n  \"Macedonian\",\n  \"Malagasy\",\n  \"Malay\",\n  \"Malayalam\",\n  \"Maltese\",\n  \"Mandarin Chinese\",\n  \"Manx\",\n  \"Maori\",\n  \"Marathi\",\n  \"Marshallese\",\n  \"Moldovan, Moldavian, Romanian\",\n  \"Mongolian\",\n  \"Nauru\",\n  \"Navajo, Navaho\",\n  \"Northern Ndebele\",\n  \"Ndonga\",\n  \"Nepali\",\n  \"Northern Sami\",\n  \"Norwegian\",\n  \"Norwegian Bokmål\",\n  \"Norwegian Nynorsk\",\n  \"Nuosu, Sichuan Yi\",\n  \"Occitan (post 1500)\",\n  \"Ojibwa\",\n  \"Oriya\",\n  \"Oromo\",\n  \"Ossetian, Ossetic\",\n  \"Pali\",\n  \"Panjabi, Punjabi\",\n  \"Pashto, Pushto\",\n  \"Persian\",\n  \"Polish\",\n  \"Portuguese\",\n  \"Quechua\",\n  \"Romansh\",\n  \"Rundi\",\n  \"Russian\",\n  \"Samoan\",\n  \"Sango\",\n  \"Sanskrit\",\n  \"Sardinian\",\n  \"Serbian\",\n  \"Shona\",\n  \"Sindhi\",\n  \"Sinhala, Sinhalese\",\n  \"Slovak\",\n  \"Slovenian\",\n  \"Somali\",\n  \"Sotho, Southern\",\n  \"South Ndebele\",\n  \"Spanish, Castilian\",\n  \"Sundanese\",\n  \"Swahili\",\n  \"Swati\",\n  \"Swedish\",\n  \"Tagalog\",\n  \"Tahitian\",\n  \"Tajik\",\n  \"Tamil\",\n  \"Tatar\",\n  \"Telugu\",\n  \"Thai\",\n  \"Tibetan\",\n  \"Tigrinya\",\n  \"Tonga (Tonga Islands)\",\n  \"Tsonga\",\n  \"Tswana\",\n  \"Turkish\",\n  \"Turkmen\",\n  \"Twi\",\n  \"Uighur, Uyghur\",\n  \"Ukrainian\",\n  \"Urdu\",\n  \"Uzbek\",\n  \"Venda\",\n  \"Vietnamese\",\n  \"Volap_k\",\n  \"Walloon\",\n  \"Welsh\",\n  \"Western Frisian\",\n  \"Wolof\",\n  \"Xhosa\",\n  \"Yiddish\",\n  \"Yoruba\",\n  \"Zhuang, Chuang\",\n  \"Zulu\",\n];\n\nexport default languagesSpokenList;\n","// return a promise\nexport function copyToClipboard(textToCopy) {\n    // navigator clipboard api needs a secure context (https)\n    if (navigator.clipboard && window.isSecureContext) {\n        // navigator clipboard api method'\n        return navigator.clipboard.writeText(textToCopy);\n    } else {\n        // text area method\n        let textArea = document.createElement(\"textarea\");\n        textArea.value = textToCopy;\n        // make the textarea out of viewport\n        textArea.style.position = \"fixed\";\n        textArea.style.left = \"-999999px\";\n        textArea.style.top = \"-999999px\";\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        return new Promise((res, rej) => {\n            // here the magic happens\n            document.execCommand('copy') ? res() : rej();\n            textArea.remove();\n        });\n    }\n}","import { Grid, Link, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport formData from \"../../../utils/formData\";\nimport \"./Footer.css\";\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <Grid container className=\"footer\">\n        <Grid item xs={12} className=\"footer_content\">\n          <Typography variant=\"body2\" className=\"text footer_top\">\n            {formData.footer.top}\n          </Typography>\n          <Typography variant=\"body2\" className=\"text footer_bottom\">\n            {formData.footer.bottom}\n            <Link\n              className=\"text site_link\"\n              onClick={() => window.open(formData.footer.url, \"_blank\")}\n            >\n              <b>\n                <u>{formData.footer.urlstring}</u>\n              </b>\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Footer;\n","import { Box, Button, Grid } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\n\nexport class FormButton extends Component {\n  render() {\n    return (\n      <Grid item>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={this.props.onClick}\n            disabled={this.props.disabled}\n            buttonRef={this.props.buttonRef}\n            size={this.props.size}\n          >\n            {this.props.buttonDescription}\n          </Button>\n        </Box>\n      </Grid>\n    );\n  }\n}\n\nexport default FormButton;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport \"./Header.css\";\n\nexport class Header extends Component {\n  render() {\n    return (\n      <Grid container className=\"header\">\n        <Grid item className=\"header_text\">\n          <Typography variant=\"body2\" className=\"text\">\n            {this.props.title}\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Header;\n","import { Grid, Link, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport axiosConfig, { answersUrl } from \"../../../utils/Api/axiosConfig\";\nimport formData from \"../../../utils/formData\";\nimport { copyToClipboard } from \"../../../utils/Logic/copyUtil\";\nimport Footer from \"../../Helpers/Footer/Footer\";\nimport FormButton from \"../../Helpers/FormButton/FormButton\";\nimport Header from \"../../Helpers/Header/Header\";\nimport \"./EmailStudentVersion.css\";\n\nexport class Email extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isCopied: false };\n  }\n  /* Submit quiz answers */\n  componentDidMount() {\n    let formStateCopy = JSON.parse(JSON.stringify(this.props.formState));\n    delete formStateCopy[\"step\"];\n    let answers = JSON.stringify(formStateCopy);\n\n    console.log(\"Initiated POST request to server with the following payload:\");\n    console.log(answers);\n    axiosConfig\n      .post(answersUrl, answers)\n      .then((response) => {\n        console.log(\"Server Response\");\n        console.log(response);\n        if (response.status === 201) {\n          alert(\"Responses submitted successfully!\");\n        } else {\n          alert(\n            \"Something went wrong in responses submission. Responses were submitted but status code returned is wrong. Please contact the project team at singlishwords@nus.edu.sg.\"\n          );\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\n          `Error! Responses submission failed. Please contact the project team at singlishwords@nus.edu.sg.`\n        );\n      });\n\n    /* Clear local storage */\n    this.props.removeStateFromLocalStorage();\n  }\n\n  render() {\n    const uuid = this.props.formState.uuid;\n    const isCopied = this.state.isCopied;\n    return (\n      <Grid container>\n        {/* Thank you header*/}\n        <Header title={formData.emailPageStudent.title} />\n\n        <Grid container className=\"email_container\" justify=\"center\">\n          {/* Paragraph 1 - What we are trying to do */}\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" id=\"content\">\n              {formData.emailPageStudent.firstParagraphHeader}\n            </Typography>\n            <Grid item xs={12} className=\"content_grid\">\n              <Typography variant=\"body1\" className=\"text\">\n                {formData.emailPageStudent.firstParagraphDescription}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Paragraph 2 - If you would like to take part in the lucky draw or receive updates about this research */}\n          <Grid item xs={12} className=\"receive_updates_lucky_draw_header\">\n            <Typography variant=\"h4\" id=\"content\">\n              {formData.emailPageStudent.secondParagraphHeader}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} className=\"content_grid\">\n            <Typography variant=\"body1\" className=\"text\">\n              {formData.emailPageStudent.secondParagraphDescription.description1}\n              <Link\n                className=\"site_link\"\n                onClick={() =>\n                  window.open(\"mailto:singlishwords@nus.edu.sg\", \"_blank\")\n                }\n              >\n                <b>\n                  <u>{formData.emailPageStudent.secondParagraphDescription.email}</u>\n                </b>\n              </Link>\n              {formData.emailPageStudent.secondParagraphDescription.description2}\n            </Typography>\n\n            <Typography variant=\"body1\" className=\"text code_text\">\n              <b>{formData.emailPageStudent.secondParagraphDescription.enterCode}</b>\n            </Typography>\n\n            <Grid item xs={12} className=\"uuid_container\">\n              <Grid item xs={10}>\n                <Typography variant=\"body1\" className=\"text\">\n                  <b>{uuid}</b>\n                </Typography>\n              </Grid>\n              {isCopied ? (\n                <Grid item xs={2} className=\"copy_button copied\">\n                  <FormButton\n                    buttonDescription={\"Copied\"}\n                    onClick={() => {\n                      copyToClipboard(uuid);\n                    }}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={2} className=\"copy_button\">\n                  <FormButton\n                    buttonDescription={\"Copy\"}\n                    onClick={() => {\n                      copyToClipboard(uuid);\n                      this.setState({ isCopied: true });\n                    }}\n                  />\n                </Grid>\n              )}\n            </Grid>\n\n            <Typography variant=\"body1\" className=\"text\">\n              {formData.emailPageStudent.secondParagraphDescription.description3}\n            </Typography>\n          </Grid>\n\n          {/* Paragraph 4 - Get in touch*/}\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" id=\"content\">\n              {formData.emailPage.fourthParagraphHeader}\n            </Typography>\n            <Grid item xs={12} className=\"content_grid\">\n              <Typography variant=\"body1\" className=\"text\">\n                {formData.emailPage.fourthParagraphDescription.description1}\n              </Typography>\n              <Typography variant=\"body1\" className=\"text\">\n                <Link\n                  className=\"site_link\"\n                  onClick={() =>\n                    window.open(\n                      \"mailto:smallworldofsinglishwords@gmail.com\",\n                      \"_blank\"\n                    )\n                  }\n                >\n                  <b>\n                    <u>{formData.emailPage.fourthParagraphDescription.email}</u>\n                  </b>\n                </Link>\n              </Typography>\n              <br />\n              <br />\n              <Typography variant=\"body1\" className=\"text\" display=\"inline\">\n                <b>\n                  {formData.emailPage.fourthParagraphDescription.description2}\n                </b>\n              </Typography>\n              <Typography variant=\"body1\" className=\"text\" display=\"inline\">\n                <Link\n                  className=\"site_link\"\n                  onClick={() =>\n                    window.open(\"mailto:cynthia@nus.edu.sg\", \"_blank\")\n                  }\n                >\n                  <b>\n                    <u>\n                      {formData.emailPage.fourthParagraphDescription.email2}\n                    </u>\n                  </b>\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Paragraph 5 - Share the study*/}\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" id=\"content\">\n              {formData.emailPage.fifthParagraphHeader}\n            </Typography>\n            <Grid item xs={12} className=\"content_grid\">\n              <Typography variant=\"body1\" className=\"text\">\n                {formData.emailPage.fifthParagraphDescription}\n                <Link\n                  className=\"site_link\"\n                  onClick={() => window.open(\"/\", \"_blank\")}\n                >\n                  <b>\n                    <u>{window.location.host}</u>\n                  </b>\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Footer />\n      </Grid>\n    );\n  }\n}\n\nexport default Email;\n","import { Divider, Grid, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport axiosConfig, { questionsUrl } from \"../../../utils/Api/axiosConfig\";\nimport formData from \"../../../utils/formData\";\nimport { recaptchaFields } from \"../../../utils/formFields\";\nimport FormButton from \"../../Helpers/FormButton/FormButton\";\nimport Header from \"../../Helpers/Header/Header\";\nimport \"./Instruction.css\";\n\nexport class Instruction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = recaptchaFields;\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    const numberOfWordsToGet = this.props.values.data.length;\n    const { previousStep } = this.props;\n    /* Make a GET request to pull questions */\n    axiosConfig\n      .get(questionsUrl + \"?limit=\" + numberOfWordsToGet)\n      .then((response) => {\n        let question = response.data;\n        console.log(\"Initiated GET request to server\");\n        console.log(\"Response: \");\n        console.log(question);\n\n        /* Something is wrong if the number of words we requested from DB does not\n        match the number of words we get, or if DB returns null. => Redirect user to \n        Introduction Page. */\n        if (question.length !== numberOfWordsToGet || question === null) {\n          previousStep();\n          alert(\n            `Database is down for maintenance. Please try again later. Alternatively, you can contact the project team at singlishwords@nus.edu.sg.`\n          );\n        } else {\n          this.props.handleWordPopulation(question);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        previousStep();\n        alert(\n          `Database is down for maintenance. Please try again later. Alternatively, you can contact the project team at singlishwords@nus.edu.sg.`\n        );\n      });\n  }\n\n  handleRecaptchaChange = () => {\n    this.setState({ isVerified: true });\n  };\n\n  render() {\n    const { nextPage } = this.props;\n    const { isVerified } = this.state;\n\n    return (\n      <Grid container>\n        {/* Header */}\n        <Header title={formData.instructionsPage.title} />\n\n        <Grid container className=\"instruction_container\" justify=\"center\">\n          <Divider />\n          <Grid container justify=\"center\">\n            {/* Content How it works...*/}\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" className=\"title\" id=\"content\">\n                {formData.instructionsPage.firstParagraphHeader}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} className=\"content_grid\">\n              <Typography variant=\"body1\" className=\"text\">\n                {\n                  formData.instructionsPage.firstParagraphDescription\n                    .description1\n                }{\" \"}\n                <b>\n                  {\n                    formData.instructionsPage.firstParagraphDescription\n                      .description2\n                  }\n                </b>{\" \"}\n                {\n                  formData.instructionsPage.firstParagraphDescription\n                    .description3\n                }\n                {\"   \"}\n              </Typography>\n              <br />\n              <Typography variant=\"body1\" className=\"text\">\n                {\n                  formData.instructionsPage.firstParagraphDescription\n                    .description4\n                }{\" \"}\n                <em>\n                  {\n                    formData.instructionsPage.firstParagraphDescription\n                      .description5\n                  }\n                </em>{\" \"}\n                {\n                  formData.instructionsPage.firstParagraphDescription\n                    .description6\n                }\n              </Typography>\n            </Grid>\n\n            {/* Content Some hints...*/}\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" className=\"title\" id=\"content\">\n                {formData.instructionsPage.secondParagraphHeader}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} className=\"content_grid\">\n              <Typography variant=\"body1\" className=\"text\">\n                {\n                  formData.instructionsPage.secondParagraphDescription\n                    .description1\n                }\n              </Typography>\n              <br />\n              <Typography variant=\"body1\" className=\"text\">\n                {\n                  formData.instructionsPage.secondParagraphDescription\n                    .description2\n                }\n              </Typography>\n              <br />\n              <Typography variant=\"body1\" className=\"text\">\n                {\n                  formData.instructionsPage.secondParagraphDescription\n                    .description3\n                }\n                <em>\n                  {\n                    formData.instructionsPage.secondParagraphDescription\n                      .description4\n                  }\n                </em>{\" \"}\n                {\n                  formData.instructionsPage.secondParagraphDescription\n                    .description5\n                }\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Continue Button*/}\n          <Grid container className=\"continue_container\">\n            <Grid className=\"recaptcha\" item xs={12}>\n              <ReCAPTCHA\n                /* To change site key once actual site is up.\n                Use smallworldofsinglishwords@gmail.com */\n                sitekey=\"6Ldy0tQbAAAAANL-FvKgyzKBeWcGSaER4cd9jta0\"\n                onChange={this.handleRecaptchaChange}\n              />\n            </Grid>\n            <Grid item xs={12} className=\"continue_button_container\">\n              <FormButton\n                buttonDescription={\n                  formData.instructionsPage.secondParagraphDescription\n                    .buttonDescription\n                }\n                onClick={nextPage}\n                disabled={!isVerified}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Instruction;\n","export default __webpack_public_path__ + \"static/media/NUS_Logo.a55bd0b7.png\";","export function startTimer() {\n  return performance.now();\n}\n\nexport function endTimer() {\n  return performance.now();\n}\n\n/* This function calculates date time in Singapore in ISO format*/\nexport function currentDateTime() {\n  let date = new Date(); \n  let isoDateTime = new Date(\n    date.getTime() - date.getTimezoneOffset() * 60000\n  ).toISOString();\n  return isoDateTime;\n}\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport image from \"../../../assets/images/NUS_Logo.png\";\nimport formData from \"../../../utils/formData\";\nimport { currentDateTime } from \"../../../utils/Logic/timeUtil\";\nimport Footer from \"../../Helpers/Footer/Footer\";\nimport FormButton from \"../../Helpers/FormButton/FormButton\";\nimport \"./IntroductionStudentVersion.css\";\n\nexport class IntroductionStudentVersion extends Component {\n  constructor(props) {\n    super(props);\n    this.currentDateTime = currentDateTime();\n  }\n\n  render() {\n    const { handleFieldChange, nextPage } = this.props;\n\n    return (\n      <Grid container>\n        <Grid item className=\"container\">\n          {/* WAS title*/}\n          <Grid container className=\"row\">\n            <Grid item xs={4} className=\"image_container\">\n              <img className=\"image\" src={image} alt=\"\" />\n            </Grid>\n            <Grid item className=\"title\" xs={8}>\n              <h2 className=\"logoTxt titleTxt\">\n                {formData.introductionPageStudent.title}\n              </h2>\n              <h2 className=\"logoTxt subTxt\">\n                {formData.introductionPageStudent.subtitle}\n              </h2>\n            </Grid>\n          </Grid>\n\n          {/* Introduction */}\n          <Grid container className=\"introduction\" justify=\"center\">\n            <Grid item className=\"introduction_grid\">\n              <Typography variant=\"body2\" className=\"text\" component={\"div\"}>\n                {formData.introductionPageStudent.introduction}\n                <p className=\"email_text\">\n                  <b>{formData.introductionPageStudent.introductionEmail}</b>\n                </p>\n                {formData.introductionPageStudent.introduction2}\n                <i>{formData.introductionPageStudent.introduction3}</i>\n                <br />\n                <br />\n                {formData.introductionPageStudent.introduction4}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Button */}\n          {/* Start timer to track user's activity on page*/}\n          <Grid container className=\"form_button\">\n            <Grid xs={6} item className=\"continue_button_container\">\n              <FormButton\n                buttonDescription={\n                  formData.introductionPageStudent.continueButtonDescription\n                }\n                onClick={(e) => {\n                  handleFieldChange(\"startTime\", currentDateTime());\n                  handleFieldChange(\"uuid\", \"swow-\" + uuidv4());\n                  nextPage(e);\n                  \n                }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Footer/>\n      </Grid>\n    );\n  }\n}\n\nexport default IntroductionStudentVersion;\n","import React from \"react\";\nimport { Button, Grid, Typography, Popover } from \"@material-ui/core\";\nimport \"./PopoverButton.css\";\n\n/* Taken directly from MaterialUI API. */\nexport default function PopoverButton({\n  buttonDescription,\n  popOverButtonText,\n  type,\n}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid item className=\"container\">\n      <Button\n        color=\"primary\"\n        aria-describedby={id}\n        variant=\"contained\"\n        onClick={handleClick}\n      >\n        {buttonDescription}\n      </Button>\n      <Popover\n        id={id}\n        className={type}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        disableAutoFocus={true}\n      >\n        <Typography\n          variant=\"body2\"\n          align=\"justify\"\n          className={\n            type === \"introduction\"\n              ? \"popoverbutton_text introduction_popover\"\n              : \"popoverbutton_text quiz_popover\"\n          }\n        >\n          {popOverButtonText}\n        </Typography>\n      </Popover>\n    </Grid>\n  );\n}\n","import { Grid, LinearProgress, TextField, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport formData from \"../../../utils/formData\";\nimport { recaptchaFields } from \"../../../utils/formFields\";\nimport {\n  currentDateTime,\n  endTimer,\n  startTimer,\n} from \"../../../utils/Logic/timeUtil\";\nimport FormButton from \"../../Helpers/FormButton/FormButton\";\nimport PopoverButton from \"../../Helpers/PopoverButton/PopoverButton\";\nimport \"./Quiz.css\";\n\nexport class Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.firstAssociationRef = React.createRef();\n    this.secondAssociationRef = React.createRef();\n    this.thirdAssociationRef = React.createRef();\n    this.continueButton = React.createRef();\n    this.pageStartTime = startTimer();\n    this.pageEndTime = \"\";\n    this.resetAssociations = false;\n    this.state = recaptchaFields;\n  }\n\n  componentDidUpdate() {\n    if (this.resetAssociations) {\n      this.resetAssociations = false;\n      /* Once user clicks the \"Continue\" button, reset all test fields and reset\n    cursor back to the first association textfield */\n      this.firstAssociationRef.current.value = \"\";\n      this.secondAssociationRef.current.value = \"\";\n      this.thirdAssociationRef.current.value = \"\";\n      this.firstAssociationRef.current.focus();\n      /* Reset pageStartTime reference position for every page */\n      this.pageStartTime = startTimer();\n      this.setState({ showRecaptcha: Math.random() < 0.1 });\n    }\n  }\n\n  handleRecaptchaChange = () => {\n    this.setState({ recaptchaAlreadyShown: true });\n    this.setState({ isVerified: true });\n  };\n\n  render() {\n    const {\n      values,\n      handleResponseChange,\n      handleTimeOnPage,\n      handleFieldChange,\n      wordIndex,\n      nextPage,\n    } = this.props;\n    const firstAssociationIndex = 0;\n    const secondAssociationIndex = 1;\n    const thirdAssociationIndex = 2;\n    const { isVerified, showRecaptcha, recaptchaAlreadyShown } = this.state;\n\n    return (\n      <Grid container className=\"container\">\n        <Grid container className=\"experiment_container\">\n          {/* Word on Page*/}\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" className=\"word\">\n              {values.data[wordIndex].question.word}\n            </Typography>\n          </Grid>\n          {/* First Association */}\n          <Grid item xs={12} className=\"textField\">\n            <TextField\n              autoFocus\n              autoComplete=\"off\"\n              label={formData.quizPage.firstAssociationInstruction}\n              name=\"firstAssociationText\"\n              onChange={(e) =>\n                handleResponseChange(e, wordIndex, firstAssociationIndex)\n              }\n              inputRef={this.firstAssociationRef}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  this.secondAssociationRef.current.focus();\n                }\n              }}\n              defaultValue={\n                values.data[wordIndex].response[firstAssociationIndex]\n              }\n            />\n\n            {/* Second Association */}\n            <TextField\n              autoComplete=\"off\"\n              label={formData.quizPage.secondAssociationInstruction}\n              name=\"secondAssociationText\"\n              onChange={(e) =>\n                handleResponseChange(e, wordIndex, secondAssociationIndex)\n              }\n              inputRef={this.secondAssociationRef}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  this.thirdAssociationRef.current.focus();\n                }\n              }}\n              defaultValue={\n                values.data[wordIndex].response[secondAssociationIndex]\n              }\n            />\n\n            {/* Third Association */}\n            <TextField\n              autoComplete=\"off\"\n              label={formData.quizPage.thirdAssociationInstruction}\n              name=\"thirdAssociationText\"\n              onChange={(e) =>\n                handleResponseChange(e, wordIndex, thirdAssociationIndex)\n              }\n              inputRef={this.thirdAssociationRef}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  this.continueButton.current.click();\n                }\n              }}\n              defaultValue={\n                values.data[wordIndex].response[thirdAssociationIndex]\n              }\n            />\n          </Grid>\n\n          <Grid container className=\"progress_container\">\n            <Grid item xs={12}>\n              <Typography\n                className=\"progress_text\"\n                variant=\"caption\"\n                display=\"block\"\n                gutterBottom\n              >\n                {formData.quizPage.progress}\n              </Typography>\n              <LinearProgress\n                className=\"progress\"\n                variant=\"determinate\"\n                value={\n                  (100 / values.data.length) * wordIndex\n                }\n              />\n            </Grid>\n          </Grid>\n\n          {/* Recaptcha that randomly appears one time in quiz page .\n          Show Recaptcha once at random if it has not been shown. */}\n          {showRecaptcha && !recaptchaAlreadyShown ? (\n            <Grid className=\"recaptcha\" item xs={12}>\n              <ReCAPTCHA\n                /* To change site key once actual site is up.\n                Use smallworldofsinglishwords@gmail.com */\n                sitekey=\"6Ldy0tQbAAAAANL-FvKgyzKBeWcGSaER4cd9jta0\"\n                onChange={this.handleRecaptchaChange}\n              />\n            </Grid>\n          ) : null}\n\n          {/* Continue Button */}\n          {/* handleTimeOnPage tracks how long the user has been on the page*/}\n          <Grid container className=\"button_container\">\n            <Grid item xs={6}>\n              <PopoverButton\n                buttonDescription={formData.quizPage.needHelpButtonDescription}\n                popOverButtonText={formData.quizPage.instructionReminder}\n                type=\"Quiz\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormButton\n                buttonDescription={formData.quizPage.buttonDescription}\n                onClick={(e) => {\n                  this.resetAssociations = true;\n                  this.pageEndTime = endTimer();\n                  handleTimeOnPage(\n                    wordIndex,\n                    this.pageStartTime,\n                    this.pageEndTime\n                  );\n                  handleFieldChange(\"endTime\", currentDateTime());\n                  nextPage(e);\n                }}\n                buttonRef={this.continueButton}\n                disabled={\n                  showRecaptcha && !recaptchaAlreadyShown\n                    ? !isVerified\n                    : false\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Quiz;\n","export function checkCompulsoryFieldsForNonSingaporean(values) {\n    return values.age !== \"\" &&\n    values.gender !== \"\" &&\n    values.education !== \"\" &&\n    values.countryOfBirth !== \"\" &&\n    values.countryOfResidence !== \"\" &&\n    values.isNative !== \"\";\n}\n\nexport function checkCountryOfBirthSingapore(values) {\n    return values.countryOfBirth === \"Singapore\";\n}\n\nexport function checkEthnicityFieldFilled(values) {\n    return values.ethnicity !== \"\";\n}\n","import { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport \"./Dropdown.css\";\n\nexport class Dropdown extends Component {\n  render() {\n    return (\n      <FormControl\n        required={this.props.name === \"languagesSpoken\" ? false : true}\n        id=\"dropdown\"\n      >\n        <InputLabel>{this.props.inputLabel}</InputLabel>\n        <Select\n          native\n          value={this.props.value}\n          name={this.props.name}\n          onChange={this.props.onChange}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {this.props.name === \"age\"\n            ? this.props.listData.map((age) => {\n                if (age < 18) {\n                  return (\n                    <option key={age} value={age}>\n                      {\"Less Than 18\"}\n                    </option>\n                  );\n                } else if (age > 80) {\n                  return (\n                    <option key={age} value={age}>\n                      {\"More Than 80\"}\n                    </option>\n                  );\n                } else {\n                  return (\n                    <option key={age} value={age}>\n                      {age}\n                    </option>\n                  );\n                }\n              })\n            : this.props.listData.map((item) => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default Dropdown;\n","import {\n  Divider,\n  Grid,\n  Typography,\n  ListItem,\n  ListItemText,\n  List,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport formData from \"../../../utils/formData\";\nimport {\n  checkCompulsoryFieldsForNonSingaporean,\n  checkCountryOfBirthSingapore,\n  checkEthnicityFieldFilled,\n} from \"../../../utils/Logic/userInformationLogic\";\nimport Dropdown from \"../../Helpers/Dropdown/Dropdown\";\nimport FormButton from \"../../Helpers/FormButton/FormButton\";\nimport Header from \"../../Helpers/Header/Header\";\nimport \"./UserDetails.css\";\n\nexport class UserDetails extends Component {\n  render() {\n    const {\n      values,\n      handleChange,\n      handleAgeChange,\n      handleCountryOfBirthChange,\n      handleLanguageChange,\n      handleLanguageReset,\n      nextPage,\n    } = this.props;\n    /* The below block of code disables/enables the \"Continue\" button.\n    Firstly, check that all compulsory fields (Age, Gender, Education, Birth Country, \n    Residence Country, Native Speaker) are filled.\n    Secondly, if participant is a Singaporean, check that Ethnicity Field is filled. */\n    const compusloryFieldsFilled =\n      checkCompulsoryFieldsForNonSingaporean(values);\n    const isSingaporean = checkCountryOfBirthSingapore(values);\n    const isEnabled = isSingaporean\n      ? compusloryFieldsFilled && checkEthnicityFieldFilled(values)\n      : compusloryFieldsFilled;\n\n    return (\n      <Grid container>\n        {/* Header */}\n        <Header title={formData.informationAboutYouPage.title} />\n\n        {/* Content */}\n        <Grid container className=\"profileContainer\" justify=\"center\">\n          <Divider id=\"divider\" />\n          <Grid item xs={12}>\n            {/* User Detail Input Instructions */}\n            <Typography variant=\"body1\" className=\"content1\">\n              {formData.informationAboutYouPage.instruction1}\n              <br />\n              <b>{formData.informationAboutYouPage.instruction2}</b>\n            </Typography>\n\n            {/* Age */}\n            <Dropdown\n              className=\"dropdown\"\n              inputLabel={formData.informationAboutYouPage.ageInstruction}\n              value={values.age}\n              name={\"age\"}\n              onChange={handleAgeChange}\n              listData={formData.informationAboutYouPage.ages}\n            />\n\n            {/* Gender */}\n            <Dropdown\n              className=\"dropdown\"\n              inputLabel={formData.informationAboutYouPage.genderInstruction}\n              value={values.gender}\n              name={\"gender\"}\n              onChange={handleChange}\n              listData={formData.informationAboutYouPage.genderTypes}\n            />\n\n            {/* Education */}\n            <Dropdown\n              className=\"dropdown\"\n              inputLabel={formData.informationAboutYouPage.educationInstruction}\n              value={values.education}\n              name={\"education\"}\n              onChange={handleChange}\n              listData={formData.informationAboutYouPage.educationLevels}\n            />\n\n            {/* Country-of-Birth */}\n            <Dropdown\n              className=\"dropdown\"\n              inputLabel={\n                formData.informationAboutYouPage.birthCountryInstruction\n              }\n              value={values.countryOfBirth}\n              name={\"countryOfBirth\"}\n              onChange={handleCountryOfBirthChange}\n              listData={formData.informationAboutYouPage.countries}\n            />\n\n            {/* Ethnicity (Show ethnicity only if Country-of-Residence is Singapore) */}\n            {checkCountryOfBirthSingapore(values) ? (\n              <Dropdown\n                className=\"dropdown\"\n                inputLabel={\n                  formData.informationAboutYouPage.ethnicityInstruction\n                }\n                value={values.ethnicity}\n                name={\"ethnicity\"}\n                onChange={handleChange}\n                listData={formData.informationAboutYouPage.ethnicities}\n              />\n            ) : null}\n\n            {/* Country-of-Residence */}\n            <Dropdown\n              className=\"dropdown\"\n              inputLabel={\n                formData.informationAboutYouPage.residenceCountryInstruction\n              }\n              value={values.countryOfResidence}\n              name={\"countryOfResidence\"}\n              onChange={handleChange}\n              listData={formData.informationAboutYouPage.countries}\n            />\n\n            {/* Native Speaker? */}\n            <Dropdown\n              className=\"dropdown\"\n              inputLabel={\n                formData.informationAboutYouPage.nativeSpeakerInstruction\n              }\n              value={values.isNative}\n              name={\"isNative\"}\n              onChange={handleChange}\n              listData={formData.informationAboutYouPage.yesAndNo}\n            />\n\n            {/* Languages Spoken */}\n            <Grid container className=\"languagesContainer\">\n              <Grid item xs={6}>\n                {/* If \"The `value` prop supplied to <select> must be a scalar value if `multiple` is false.\"\n                error appears in console, just ignore it. Basically state should not be array if Dropdown\n                component is used. However, Material-UI Multi-Select is buggy. Hence I used a normal\n                Select component in Dropdown instead of Multi-Select */}\n                <Dropdown\n                  className=\"dropdown\"\n                  inputLabel={\n                    formData.informationAboutYouPage.otherLanguagesInstruction\n                  }\n                  value={values.languagesSpoken}\n                  name={\"languagesSpoken\"}\n                  onChange={handleLanguageChange}\n                  listData={formData.informationAboutYouPage.languagesSpoken}\n                />\n                <FormButton\n                  buttonDescription=\"Reset Chosen Languages\"\n                  onClick={handleLanguageReset}\n                ></FormButton>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography className=\"languagesChosenHeader\" variant=\"button\">\n                  Languages Chosen\n                </Typography>\n                <Grid item xs={12} className=\"languagesChosenContainer\">\n                  <List dense={true} className=\"list\">\n                    {values.languagesSpoken.map((language) => {\n                      return (\n                        <ListItem key={language} className=\"listItem\">\n                          <ListItemText primary={language} />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/* Continue Button*/}\n          <Grid container className=\"continue_button_container\">\n            <Grid item xs={12}>\n              <FormButton\n                buttonDescription={\n                  formData.informationAboutYouPage.buttonDescription\n                }\n                onClick={nextPage}\n                disabled={!isEnabled}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default UserDetails;\n","import React, { Component } from \"react\";\nimport formFields from \"../utils/formFields\";\n// import Email from \"./Pages/Email/Email\";\nimport EmailStudentVersion from \"./Pages/EmailStudentVersion/EmailStudentVersion\";\nimport Instruction from \"./Pages/Instruction/Instruction\";\n// import Introduction from \"./Pages/Introduction/Introduction\";\nimport IntroductionStudentVersion from \"./Pages/IntroductionStudentVersion/IntroductionStudentVersion\";\nimport Quiz from \"./Pages/Quiz/Quiz\";\nimport UserDetails from \"./Pages/UserDetails/UserDetails\";\n\nexport class Form extends Component {\n  constructor(props) {\n    super(props);\n    /* Make a copy of the state so that step number can be reset once\n    we hit the Email page */\n    this.stateCopy = JSON.parse(JSON.stringify(formFields));\n    this.stateReset = false;\n    /* If there is a state in the local storage, use it. This handles\n    cases where the user refreshes the page. It ensures that the survey data\n    is not lost */\n    this.state =\n      JSON.parse(window.localStorage.getItem(\"formFields\")) || formFields;\n  }\n\n  saveStateToLocalStorage() {\n    window.localStorage.setItem(\"formFields\", JSON.stringify(this.state));\n  }\n\n  removeStateFromLocalStorage = () => {\n    window.localStorage.removeItem(\"formFields\");\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    this.stateReset = true;\n    const cleanState = Object.assign({}, this.stateCopy);\n    this.setState({ ...cleanState });\n  };\n\n  componentDidMount() {\n    this.saveStateToLocalStorage();\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  /* Prevent re-rendering after clearing state at Email page\n  (If not we will route back to Introduction immediately) */\n  shouldComponentUpdate() {\n    if (this.stateReset) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /* Proceed to next step */\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1,\n    });\n  };\n\n  nextPage = (e) => {\n    e.preventDefault();\n    this.nextStep();\n  };\n\n  /* Moves user to previous step (For error handling purposes) */\n  previousStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n\n  /* Handle primitive field change (Default handleChange for most fields) \n  Special cases like handleAgeChange and handleCountryofBirthChange are handled \n  separately to preserve code modularity / avoid super functions */\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  /* Define a handleChange for Age due to string vs number convertibility consideration*/\n  handleAgeChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value !== \"\" ? +e.target.value : e.target.value,\n    });\n  };\n\n  /* If user changes to another country of birth, \n  then we should clear the ethnicity field because default is Singapore*/\n  handleCountryOfBirthChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      ethnicity: \"\",\n    });\n  };\n\n  /* Handle array field change (ie languagesSpoken field)\n  Can be extended to handle general array changes by passing in state field as parameter */\n  handleLanguageChange = (e) => {\n    let temp = { ...this.state };\n    const { options } = e.target;\n    const languages = temp.languagesSpoken;\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      /* If option selected, and option not in language array, add language to array*/\n      if (options[i].selected && !languages.includes(options[i].value)) {\n        languages.push(options[i].value);\n      }\n    }\n    temp.languagesSpoken = languages;\n    this.setState(temp);\n  };\n\n  handleLanguageReset = () => {\n    let temp = { ...this.state };\n    temp.languagesSpoken = [];\n    this.setState(temp);\n  };\n\n  /* Handle nested field change (ie response field) */\n  handleResponseChange = (e, i, j) => {\n    let temp = { ...this.state };\n    temp.data[i].response[j] = e.target.value;\n    this.setState(temp);\n  };\n\n  /* Populate words into form (ie question.word field) */\n  handleWordPopulation = (wordArray) => {\n    let temp = { ...this.state };\n    temp.data.map(\n      (element, index) => (element.question.word = wordArray[index].word)\n    );\n    temp.data.map(\n      (element, index) => (element.question.id = wordArray[index].id)\n    );\n    this.setState(temp);\n  };\n\n  /* Handle nested field change (ie timeOnPage field) */\n  handleTimeOnPage = (i, pageStartTime, pageEndTime) => {\n    let temp = { ...this.state };\n    const timeDifference = (pageEndTime - pageStartTime) / 1000;\n    const timeInSeconds = Math.round(timeDifference);\n    temp.data[i].timeOnPage = timeInSeconds;\n    this.setState(temp);\n  };\n\n  /* Handle time in which user starts and ends on form (ie startTime and endTime fields)\n  Target value for buttons is null. Hence, we can't use e.target.value unlike handleChange*/\n  handleFieldChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    });\n  };\n\n  render() {\n    const {\n      step,\n      age,\n      gender,\n      education,\n      countryOfBirth,\n      countryOfResidence,\n      ethnicity,\n      isNative,\n      languagesSpoken,\n      startTime,\n      endTime,\n      data,\n      uuid,\n    } = this.state;\n\n    const values = {\n      step,\n      age,\n      gender,\n      education,\n      countryOfBirth,\n      countryOfResidence,\n      ethnicity,\n      isNative,\n      languagesSpoken,\n      startTime,\n      endTime,\n      data,\n      uuid,\n    };\n\n    /* Case 4 to 23 will be used for Quiz words. When case is empty, it will share the next closest\n    non-empty code block (ie case 23). \n    Step 24 will trigger case 24, which is the Email component*/\n    switch (step) {\n      default:\n        return <h1>Something went wrong!</h1>;\n      case 1:\n        return (\n          // <Introduction\n          //   nextPage={this.nextPage}\n          //   handleChange={this.handleChange}\n          //   handleFieldChange={this.handleFieldChange}\n          // />\n          <IntroductionStudentVersion\n            nextPage={this.nextPage}\n            handleFieldChange={this.handleFieldChange}\n          />\n        );\n      case 2:\n        return (\n          <UserDetails\n            nextPage={this.nextPage}\n            handleChange={this.handleChange}\n            handleAgeChange={this.handleAgeChange}\n            handleCountryOfBirthChange={this.handleCountryOfBirthChange}\n            handleLanguageChange={this.handleLanguageChange}\n            handleLanguageReset={this.handleLanguageReset}\n            values={values}\n          />\n        );\n      case 3:\n        return (\n          <Instruction\n            previousStep={this.previousStep}\n            nextPage={this.nextPage}\n            handleWordPopulation={this.handleWordPopulation}\n            values={values}\n          />\n        );\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n      case 15:\n      case 16:\n      case 17:\n      case 18:\n      case 19:\n      case 20:\n      case 21:\n      case 22:\n      case 23:\n        /* At case 23, initial step will be 4. Step will slowly increase up to 23 to match final case of 23.\n        Hence, all the quiz components will be rendered. At step 24, case 24 (Email component) is executed. */\n        return (\n          <Quiz\n            nextPage={this.nextPage}\n            handleResponseChange={this.handleResponseChange}\n            handleTimeOnPage={this.handleTimeOnPage}\n            handleFieldChange={this.handleFieldChange}\n            values={values}\n            wordIndex={step - 4}\n          />\n        );\n      case 24:\n        return (\n          // <Email\n          //   formState={this.state}\n          //   removeStateFromLocalStorage={this.removeStateFromLocalStorage}\n          // />\n          <EmailStudentVersion\n            formState={this.state}\n            removeStateFromLocalStorage={this.removeStateFromLocalStorage}\n          />\n        );\n    }\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\n\nexport class App extends Component {\n  render() {\n    return (\n       <div className=\"App\">\n         <Form />\n       </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}